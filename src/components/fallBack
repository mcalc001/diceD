// import React from 'react';
// import './TextBox.css'

//   const onRandomise = () => {
//     let min=1; 
//     let max=6;  
//     return (
//      Math.floor(Math.random() * (+max - +min)) + +min)
//      }


//   const validate = (box1, box2,box3,box4,box5,box6) => {
//   // const { box1, box2,box3,box4,box5,box6, } = this.state;
//   return {
//     box1: box1.length === 0,
//     box2: box2.length === 0,
//     box3: box3.length === 0,
//     box4: box4.length === 0,
//     box5: box5.length === 0,
//     box6: box6.length === 0,
//   };
// }

// class TextBox extends React.Component {
// 	constructor(props){
// 		super(props);
// 		this.state = {
// 			box1: '',
// 			box2: '',
// 			box3: '',
// 			box4: '',
// 			box5: '',
// 			box6: '',
//       half: true,


// 		}
		
// 	}
//      box1Change=(event)=> {
// 		this.setState({box1: event.target.value})
		
// 	}

// 	 box2Change=(event)=> {
// 		this.setState({box2: event.target.value})
		
// 	}

// 	box3Change=(event)=> {
// 		this.setState({box3: event.target.value})
		
// 	}

// 	box4Change=(event)=> {
// 		this.setState({box4: event.target.value})
		
// 	}

// 	box5Change=(event)=> {
// 		this.setState({box5: event.target.value})
		
// 	}

// 	box6Change=(event)=> {
// 		this.setState({box6: event.target.value})
		
// 	}



// handleSubmit = (evt) => {
//   if (!this.canBeSubmitted()) {
//     evt.preventDefault();
//     return;
//   }
//   this.matchNumbers(onRandomise())
// };

//   canBeSubmitted() {
//     const errors = validate(this.state.box1,
//       this.state.box2, this.state.box3, 
//       this.state.box4, this.state.box5,
//       this.state.box6);
//     const isDisabled = Object.keys(errors).some(x => errors[x]);
//     return !isDisabled;
//   }



//   passProps = (result, number) =>{
       
//   	   var props = this.props;
//   	   var myJSON = JSON.stringify(result);
//   	   return props.onRoll(myJSON, number);
  
//   }

  
//   // higher order function that recieves the number props from a onRandomise function
//   // this function by aan onlick on the 'roll' button.
//   matchNumbers = (props) => {
// 	switch(props) {
// 		case 1:
// 		return this.passProps(this.state.box1, "1")
// 		case 2:
// 		return this.passProps(this.state.box2, "2")
// 		case 3:
// 		return this.passProps(this.state.box3, "3")
// 		case 4:
// 		return this.passProps(this.state.box4, "4")
// 		case 5:
// 		return this.passProps(this.state.box5, "5")
// 		case 6:
// 		return this.passProps(this.state.box6, "6")
// 		default:
// 		return console.log("notMatched");
// 	}
// }
//   // function that randomly generates a number between 1-6
//    render() {

//    // const {box1, box2, box3, box4, box5, box6} = this.state;



//    const errors = validate(this.state.box1,
//       this.state.box2, this.state.box3, 
//       this.state.box4, this.state.box5,
//       this.state.box6);
//      const isEnabled = !Object.keys(errors).some(x => errors[x]);
    

   
      
//         return(

// 	<article className="  shadow-3 ph4 tc w-100 mw5.5 mw6-ns center pa3 mb4  ">

	
//      <div className={errors.email ? "error" : ""} >
//       <label htmlFor="comment"
//        className=" pv2  f6 pa1 b db mb2 "> 
//      <span className="normal black-60"></span></label>
//     <textarea 
//      onChange={this.box1Change}
//      id="box1"
//      name="box1" 
//      className={errors.box1 ? "error center db border-box  w-100 measure ba  pa3 br2 mb2" : "center db border-box hover-black w-100 measure ba bord pa3 br2 mb2"} 
//      // " center db border-box hover-black w-100 measure ba b--black-20 pa2 br2 mb2" 
//      aria-describedby="comment-desc"></textarea>
//   </div>

//      <div>
//       <label htmlFor="comment"
//        className="f6 pa1 b db mb2">
//      <span className="normal black-60"></span></label>
//     <textarea 
//      onChange={this.box2Change}
//      id="box2"
//      name="box2" 
//      className={errors.box2 ?  "error center db border-box  w-100 measure ba  pa3 br2 mb2" : "center db border-box hover-black w-100 measure ba b--black-20 pa3 br2 mb2"}
//      // " center db border-box hover-black w-100 measure ba b--black-20 pa2 br2 mb2" 
//      aria-describedby="comment-desc"></textarea>
//   </div>



//      <div>
//       <label htmlFor="comment"
//        className="f6 pa1 b db mb2">
//      <span className="normal black-60"></span></label>
//     <textarea 
//      onChange={this.box3Change}
//      id="box3"
//      name="box3" 
//      className={errors.box3 ? "error center db border-box  w-100 measure ba  pa3 br2 mb2" : "center db border-box hover-black w-100 measure ba b--black-20 pa3 br2 mb2"}
//      // " center db border-box hover-black w-100 measure ba b--black-20 pa2 br2 mb2" 
//      aria-describedby="comment-desc"></textarea>
//   </div>




//      <div>
//       <label htmlFor="comment"
//        className="f6 pa1 b db mb2">
//      <span className="normal black-60"></span></label>
//     <textarea 
//      onChange={this.box4Change}
//      id="box4"
//      name="box4" 
//      className={errors.box4 ? "error center db border-box  w-100 measure ba  pa3 br2 mb2" : "center db border-box hover-black w-100 measure ba b--black-20 pa3 br2 mb2"}
//      // " center db border-box hover-black w-100 measure ba b--black-20 pa2 br2 mb2" 
//      aria-describedby="comment-desc"></textarea>
//   </div>



//      <div>
//       <label htmlFor="comment"
//        className="f6 pa1 b db mb2">
//      <span className="normal black-60"></span></label>
//     <textarea 
//      onChange={this.box5Change}
//      id="box5"
//      name="box5" 
//      className={errors.box5 ? "error center db border-box  w-100 measure ba  pa3 br2 mb2" : "center db border-box hover-black w-100 measure ba b--black-20 pa3 br2 mb2"}
//      // " center db border-box hover-black w-100 measure ba b--black-20 pa2 br2 mb2" 
//      aria-describedby="comment-desc"></textarea>
//   </div>



//      <div>
//       <label htmlFor="comment"
//        className="f6 b pa1 db mb2">
//      <span className="normal black-60"></span></label>
//     <textarea 
//      onChange={this.box6Change}
//      id="box6"
//      name="box6" 
//      className={errors.box6 ? "error center db border-box  w-100 measure ba  pa3 br2 mb2" : "center db border-box hover-black w-100 measure ba b--black-20 pa3 br2 mb2"}
//      // " center db border-box hover-black w-100 measure ba b--black-20 pa2 br2 mb2" 
//      aria-describedby="comment-desc"></textarea>
//   </div>

//      <div className="pa2 pv4">
//     <button onClick={this.handleSubmit} disabled={!isEnabled} className=" shadow-5 pa5 b ph3 pv3 br2 putton input-reset ba grow pointer f5 dib">Roll</button>
//      </div>
    

// 	</article>
//   )
//   }
     

// }


// export default TextBox;



NAV


<p onClick={() =>  onRouteChange('signout')} className='f5 link dib black underline pa3 pointer' > SignOut </p>
  <p onClick={() =>  onRouteChange('userPage')} className='f5 link dib black underline pa3 pointer' > User </p>
