{"ast":null,"code":"import _objectSpread from \"/Users/Corey/Desktop/DiceRoll-master/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Corey/Desktop/DiceRoll-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Corey/Desktop/DiceRoll-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Corey/Desktop/DiceRoll-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Corey/Desktop/DiceRoll-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Corey/Desktop/DiceRoll-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Corey/Desktop/DiceRoll-master/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Register from './components/Register/Register';\nimport SignIn from './components/SignIn/SignIn';\nimport TextBox from './components/TextBox/TextBox';\nimport ResultBox from './components/TextBox/ResultBox';\nimport LoginNavigation from './components/Navigation/LoginNavigation';\nimport Header from './components/Header/Header';\nimport Modal from './components/Modal/Modal';\nimport Profile from './components/profile/Profile';\nvar originalState = {\n  initialstate: true,\n  task: '',\n  number: '',\n  route: 'signin',\n  isSignedIn: \"true\",\n  isProfileOpen: false,\n  rollData: [],\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.onPostFetch = function () {\n      fetch(\"http://localhost:3000/profile/\".concat(_this.state.user.id), {\n        method: 'get',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (resp) {\n        return resp.json();\n      }).then(function (user) {\n        return _this.setState({\n          rollData: user\n        });\n      });\n    };\n\n    _this.onProfileUpdate = function (data) {\n      fetch(\"http://localhost:3000/profile/\".concat(_this.state.user.id), {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          rolldata: _this.state.task\n        })\n      }).then(function (resp) {\n        return resp.json();\n      });\n      onRollChange(\"rollAgain\");\n    };\n\n    _this.loadUser = function (data) {\n      _this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    _this.OnRoll = function (child, number) {\n      _this.setState({\n        initialstate: false\n      });\n\n      var result = child;\n      var num = number;\n\n      _this.setState({\n        task: result\n      });\n\n      _this.setState({\n        number: num\n      });\n    };\n\n    _this.onRouteChange = function (route) {\n      if (route === 'signout') {\n        _this.setState({\n          route: \"signin\"\n        });\n\n        _this.setState({\n          isSignedIn: \"false\"\n        });\n      } else if (route === 'home') {\n        _this.setState({\n          isSignedIn: \"true\"\n        });\n      }\n\n      _this.setState({\n        route: route\n      });\n    };\n\n    _this.toggleModal = function () {\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          isProfileOpen: !prevState.isProfileOpen\n        });\n      });\n    };\n\n    _this.onRollChange = function (rollRoute) {\n      if (rollRoute === \"rollAgain\") {\n        _this.setState({\n          initialstate: true\n        });\n      } else {\n        _this.setState({\n          initialstate: false\n        });\n      }\n\n      console.log(_this.state);\n    };\n\n    _this.state = originalState;\n    console.log(_this.state);\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          route = _this$state.route,\n          initialstate = _this$state.initialstate,\n          isProfileOpen = _this$state.isProfileOpen,\n          rollData = _this$state.rollData;\n      var filteredData = rollData.filter(function (data) {\n        return data.roll_id;\n      });\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(LoginNavigation, {\n        toggleModal: this.toggleModal,\n        onRollChange: this.onRollChange,\n        isSignedIn: this.state.isSignedIn,\n        onRouteChange: this.onRouteChange,\n        initialstate: this.state.initialstate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), isProfileOpen && React.createElement(Modal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Profile, {\n        onPostFetch: this.onPostFetch,\n        isProfileOpen: isProfileOpen,\n        toggleModal: this.toggleModal,\n        onRouteChange: this.onRouteChange,\n        user: this.state.user,\n        rollData: filteredData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), route === 'home' ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, initialstate ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(TextBox, {\n        onRoll: this.OnRoll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })) : React.createElement(ResultBox, {\n        onRollChange: this.onRollChange,\n        onProfileUpdate: this.onProfileUpdate,\n        result: this.state.task,\n        number: this.state.number,\n        id: this.state.user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      })) : route === 'signin' ? React.createElement(SignIn, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser,\n        onPostFetch: this.onPostFetch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }) : React.createElement(Register, {\n        onRouteChange: this.onRouteChange,\n        loadUser: this.loadUser,\n        onPostFetch: this.onPostFetch,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Corey/Desktop/DiceRoll-master/src/App.js"],"names":["React","Component","Register","SignIn","TextBox","ResultBox","LoginNavigation","Header","Modal","Profile","originalState","initialstate","task","number","route","isSignedIn","isProfileOpen","rollData","user","id","name","email","entries","joined","App","onPostFetch","fetch","state","method","headers","then","resp","json","setState","onProfileUpdate","data","body","JSON","stringify","rolldata","onRollChange","loadUser","OnRoll","child","result","num","onRouteChange","toggleModal","prevState","rollRoute","console","log","filteredData","filter","roll_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\n\n\nimport Register from './components/Register/Register';\nimport SignIn from './components/SignIn/SignIn';\nimport TextBox from './components/TextBox/TextBox';\nimport ResultBox from './components/TextBox/ResultBox';\nimport LoginNavigation from './components/Navigation/LoginNavigation';\nimport Header from './components/Header/Header';\nimport Modal from './components/Modal/Modal';\nimport Profile from './components/profile/Profile';\n\n\n\nconst originalState = {\n        initialstate: true,\n        task: '',\n        number: '',\n        route: 'signin',\n        isSignedIn: \"true\",\n        isProfileOpen: false,\n        rollData:[],\n        user: { id: '',\n            name: '',\n            email: '',\n            entries: 0,\n            joined: '',\n        }\n       \n    }    \n\n\n\nclass App extends Component {\n\tconstructor(){\n\t\tsuper()\n\t\t\tthis.state = originalState;\n      console.log(this.state)\n\t}\n\n\n\n \n\n onPostFetch = () => {\n    fetch(`http://localhost:3000/profile/${this.state.user.id}`,{\n      method: 'get',\n      headers: {'Content-Type': 'application/json'},\n    }).then(resp => resp.json())\n      .then( user => this.setState({rollData: user}));\n  }\n\n\n \nonProfileUpdate = (data) => {\n\n    fetch(`http://localhost:3000/profile/${this.state.user.id}`,{\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({ \n        rolldata: this.state.task,\n      })\n    }).then(resp=> resp.json())\n       onRollChange(\"rollAgain\")\n  }\n\n\n\n\n\n  loadUser = (data) => {\n    \n    this.setState( {user: {\n            id: data.id,\n            name: data.name,\n            email: data.email,\n            entries: data.entries,\n            joined: data.joined,\n          }})\n  }\n\n\n    // the data from the randomly generated box is passed here and set to state. \n    OnRoll = (child, number) => {\n        this.setState({initialstate: false})\n        const result = child;\n        const num = number;\n        this.setState({task: result})\n        this.setState({number: num })\n        \n    }\n\n  \t\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({route: \"signin\"})\n      this.setState({isSignedIn: \"false\"})\n    } else if ( route === 'home') {\n      this.setState({isSignedIn: \"true\"})\n    }\n    this.setState({route: route});\n  }  \n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      isProfileOpen: !prevState.isProfileOpen\n    }))\n  }\n\n\n\n\n  onRollChange = (rollRoute) =>{\n    if (rollRoute === \"rollAgain\"){\n      this.setState({initialstate: true})\n    } else {\n      this.setState({initialstate: false})\n    }console.log(this.state)\n  }\n\n\n  \n  render() {\n   const { route, initialstate, isProfileOpen, rollData} = this.state;\n    const filteredData = rollData.filter(data=> {\n      return data.roll_id;\n    })\n\n\n  \treturn( \n  \t\t<div className='App'>\n      <LoginNavigation \n     toggleModal={this.toggleModal}\n      onRollChange={this.onRollChange}\n      isSignedIn={this.state.isSignedIn}\n      onRouteChange={this.onRouteChange} \n      initialstate={this.state.initialstate}\n    />\n        {isProfileOpen && \n          <Modal>\n            <Profile \n            onPostFetch={this.onPostFetch}\n            isProfileOpen={isProfileOpen} \n            toggleModal={this.toggleModal} \n            onRouteChange={this.onRouteChange}\n            user={this.state.user} \n            rollData={filteredData}\n\n            />\n         </Modal>}\n    \n\n     {route === 'home'?\n\n     <div>\n      {initialstate ? (\n        <div>\n          <Header/>\n          <TextBox onRoll={this.OnRoll}/> \n        </div>\n\n        ) \n      :(\n          <ResultBox \n          onRollChange={this.onRollChange} onProfileUpdate={this.onProfileUpdate}\n          result={this.state.task} number={this.state.number} id={this.state.user.id}/>\n        )}\n\n      </div>\n\n     :(route === 'signin'\n           ?<SignIn  onRouteChange={this.onRouteChange} loadUser={this.loadUser}  onPostFetch={this.onPostFetch}/>\n           :<Register onRouteChange={this.onRouteChange} loadUser={this.loadUser} onPostFetch={this.onPostFetch} /> \n\n     )\n   }\n     </div>\n   \n    );         \n}\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}